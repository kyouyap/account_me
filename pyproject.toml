[project]
name = "default"
version = "0.1.0"
description = "Add your description here"
authors = [
    { name = "kyouyap" }
]
requires-python = ">=3.11"
readme = "README.md"
dependencies = [
    "gspread-dataframe>=4.0.0",
    "python-dotenv>=1.0.1",
    "selenium>=4.30.0",
    "oauth2client>=4.1.3",
    "pydantic>=2.10.6",
    "pydantic-settings>=2.8.1",
    "types-pyyaml>=6.0.12.20241230",
    "pandas-stubs>=2.2.3.250308",
    "pyyaml>=6.0.2",
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "google-api-python-client>=2.88.0",
    "google-auth-oauthlib>=1.0.0",
    "google-auth-httplib2>=0.1.0",
    "google-cloud-secret-manager>=2.16.0",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.13
target-version = "py313"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = [    
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]
ignore = [
    "COM812",
    "COM819",
    "D100",
    "D203",
    "D213",
    "D300",
    "E111",
    "E114",
    "E117",
    "ISC001",
    "ISC002",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "W191",
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.per-file-ignores]
# Ignore all directories named `tests`.
"tests/**" = ["INP001", "S101"]

[tool.mypy]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "gspread_dataframe"
ignore_missing_imports = true

[tool.pytest.ini_options]
pythonpath = "src"
testpaths = ["test"]
python_files = ["test_*.py"]
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "raise AssertionError",
    "if __name__ == .__main__.:"
]
omit = ["src/main.py"]

[tool.uv]
dev-dependencies = [
    "pytest>=8.3.2",
    "pre-commit>=3.8.0",
    "ruff>=0.6.3",
    "mypy>=1.15.0",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "pytest-skip-slow>=0.0.5",
    "pytest-subtests>=0.14.1",
    "coverage>=7.6.12",
    "types-aiofiles>=24.1.0.20241221",
    "pytest-asyncio>=0.25.3",
    "requests-mock>=1.12.1",
    "pytest-xdist>=3.6.1",
]
